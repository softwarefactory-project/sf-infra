---
#
# Playbook for checking CRC image
#
# Basic usage:
# * Extracted:
#     ansible-playbook \
#       -e "ssh_pub_path=~/.ssh/id_ed25519.pub"
#       playbooks/crc/promote-crc-image.yaml
#
# * Nested:
#     ansible-playbook \
#       -e "ssh_pub_path=~/.ssh/id_ed25519.pub"
#       -e "image_ssh_user=zuul" \
#       -e "normal_image_prefix=centos-9-crc-" \
#       -e "final_image_prefix=centos-9-crc-latest" \
#       playbooks/crc/promote-crc-image.yaml
#
# The ~/.ansible_crc_vars.yaml contains a pull-secret.txt generated
# on https://cloud.redhat.com/openshift/create/local.
# The variable looks like:
#
#   openshift_pull_secret: |
#     {"auths":{"cloud.openshift.com": { (...)

- name: Recognize newest image and spawn CRC VM
  hosts: localhost
  tasks:
    - name: Set important facts
      ansible.builtin.set_fact:
        final_image_prefix: "{{ final_image_prefix | default('coreos-crc-extracted-latest') }}"
        normal_image_prefix: "{{ normal_image_prefix | default('coreos-crc-extracted-') }}"
        cloud_name: "{{ cloud_name | default('nodepool-tripleo') }}"
        # for testing VM
        flavor: "{{ flavor_name | default('ci.m1.xlarge') }}"
        ssh_keypair_name: "{{ ssh_keypair_name | default('image-builder') }}"
        net_id: "{{ net_id | default('7abff1a9-a103-46d0-979a-1f1e599f4f41') }}"
        vm_name: "{{ vm_name | default('infra-dfg-team-crc') }}"
        ssh_pub_path: "{{ ssh_pub_path | default ('~/.ssh/id_ed25519.pub') }}"
        # Use 'core' for extracted. For nested use 'zuul' or none.
        image_ssh_user: "{{ image_ssh_user | default('core') }}"

    - name: Ensure cloud_name is set
      when: not cloud_name
      ansible.builtin.fail:
        msg: "You need to set at cloud_name"

    - name: Check if there is already VM with such name
      ansible.builtin.include_role:
        name: next-gen/crc-image
        tasks_from: check_vm.yaml

    - name: Get latest images and its date
      ansible.builtin.include_role:
        name: next-gen/promote-image

- name: Deploy CRC and run tests
  hosts: crc.dev
  vars:
    ansible_python_interpreter: /usr/libexec/platform-python
  tasks:
    - name: Read file with openshift_pull_secret
      ansible.builtin.include_vars:
        file: ~/.ansible_crc_vars.yaml
      delegate_to: localhost

    - name: Check if version is extracted
      become: true
      ansible.builtin.stat:
        path: /var/lib/kubelet/config.json
      register: _kubelet_config

    - name: Set pull-secret.txt in kubelect config.json
      become: true
      when: _kubelet_config.stat.exists
      ansible.builtin.copy:
        content: |
          {{ openshift_pull_secret }}
        dest: /var/lib/kubelet/config.json

    - name: Configure dnsmasq
      when: _kubelet_config.stat.exists
      ansible.builtin.include_role:
        name: next-gen/promote-image
        tasks_from: configure_dnsmasq.yaml

    - name: Install basic packages and run tests
      ansible.builtin.include_role:
        name: next-gen/promote-image
        tasks_from: test-crc.yaml

# NOTE: if we are here, it seems that the tests pass and
# there was no FAIL or exit 1.
- name: Rename images and do promotion
  hosts: localhost
  tasks:
    - name: Do promotion - change images name
      ansible.builtin.include_role:
        name: next-gen/promote-image
        tasks_from: rename-images.yaml
