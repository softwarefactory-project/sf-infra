---
# This is the main playbook that trampoline on the bridge to run the site.yaml
- hosts: localhost
  vars:
    bridge_name: bridge.softwarefactory-project.io
    bridge_ip: 38.102.83.244
    bridge_key: "{{ bridge_name }},{{ bridge_ip }},bridge ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP6xFwpXEej5SzAgx2VVCUIUr0rg4OZzwv+2LsJTKxXw"
  tasks:
    - ansible.builtin.add_host:
        name: "{{ bridge_name }}"
        ansible_python_interpreter: python3
        ansible_host: "{{ bridge_ip }}"
        ansible_user: fedora
        ansible_connection: ssh
        groups: bridge

    - ansible.builtin.known_hosts:
        name: "{{ bridge_name }}"
        key: "{{ bridge_key }}"

- hosts: bridge.softwarefactory-project.io
  gather_facts: yes
  vars:
    bridge_packages:
      - ansible
      - cronie
      - dnsmasq
      - python3-cryptography
      - python3-kubernetes
      - python3-lxml
      - python3-netaddr
      - python3-openshift
      - python3-passlib
      - python3-pip
      - python3-pyOpenSSL
      - qemu-img
      - vim-enhanced
      - tmux
      - wget
      - podman
      - postfix
  tasks:
    - block:
        - name: Start zuul_console daemon.
          zuul_console:

        - name: Synchronize src repos to workspace directory.
          ansible.builtin.synchronize:
            delete: yes
            dest: "~/src/"
            src: "{{ zuul.executor.src_root }}/"
          no_log: true

        - name: Create config directory
          ansible.builtin.file:
            path: "~/.config/openstack"
            recurse: true
            state: directory

        - name: Copy the clouds.yaml
          ansible.builtin.template:
            src: clouds.yaml.j2
            dest: ~/.config/openstack/clouds.yaml
            mode: "0400"
          no_log: yes

        - name: Copy the vault password
          ansible.builtin.copy:
            content: "{{ vault.secret }}"
            dest: "~/.ansible_vault"
            mode: "0400"
          no_log: yes
          when: vault is defined

        - name: Copy openshift pull secret file
          ansible.builtin.include_role:
            name: next-gen/prepare-host
            tasks_from: gen-ansible-vars.yaml

        - name: Copy the rhel_secrets.yaml
          ansible.builtin.template:
            src: rhel_secrets.yaml.j2
            dest: ~/.rhel_secrets.yaml
            mode: "0400"
          no_log: yes

        - name: Copy the slack webhook URL
          ansible.builtin.template:
            src: slack_api_url.yaml.j2
            dest: ~/.slack_api_url.yaml
            mode: "0400"
          no_log: yes

        - name: Copy the squid secrets
          ansible.builtin.copy:
            content: "{{ shiftstack_squid.secret }}"
            dest: "~/.squid_htpasswd"
            mode: "0400"
          no_log: yes

        - name: Symlink ansible configuration file
          ansible.builtin.file:
            src: "~/{{ zuul.projects['softwarefactory-project.io/software-factory/sf-infra'].src_dir }}/ansible/ansible.cfg"
            dest: ~/.ansible.cfg
            state: link

        - name: Ensure packages are installed
          become: yes
          ansible.builtin.package:
            name: "{{ bridge_packages }}"
            state: present

        - name: Ensure  openstackclient and openstacksdk via pip
          become: true
          ansible.builtin.pip:
            name:
              - openstacksdk
              - python-openstackclient
            state: latest

        - name: Add ssh host key for jump.ci.centos.org
          ansible.builtin.known_hosts:
            name: 'jump.ci.centos.org'
            key: 'jump.ci.centos.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAII5XmG2wsYOwCIUyw/EhbDz9BpUQpaOvJhBuvhKTMgV8'

        - name: Add ssh host key for soeru.osci.io
          ansible.builtin.known_hosts:
            name: 'soeru.osci.io'
            key: 'soeru.osci.io ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINMRZuLy7ZC+tBdofLNX+rufNDpQfS6jAbrnIUhX5n1g'

        - name: Ensure sf-infra SSH key is deployed
          ansible.builtin.copy:
            content: "{{ sshkey.id_rsa }}"
            dest: "~/.ssh/id_rsa"
            mode: "0400"
          no_log: yes
          when: sshkey is defined

        - name: Ensure community general module is installed
          ansible.builtin.shell: |
            ansible-galaxy collection install --force-with-deps community.general
          register: install_result
          until: install_result.rc == 0
          retries: 30
          delay: 5

        - name: Fetch galaxy roles
          when: fetch_galaxy_role | default(False) | bool
          community.general.ansible_galaxy_install:
            type: both
            requirements_file: "~/{{ zuul.projects['softwarefactory-project.io/software-factory/sf-infra'].src_dir }}/requirements.yml"
            force: true
          register: install_result
          until: "install_result is not failed"
          retries: 30
          delay: 5

        - name: Run configuration playbook
          args:
            chdir: "~/{{ zuul.projects['softwarefactory-project.io/software-factory/sf-infra'].src_dir }}"
          command: "ansible-playbook -vv playbooks/{{ sf_infra_play_name }}.yaml"
