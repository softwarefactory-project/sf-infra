---
# This is the main playbook that trampoline on the bridge to run the site.yaml
- hosts: localhost
  vars:
    bridge_name: bridge.softwarefactory-project.io
    bridge_ip: 38.102.83.244
    # NOTE(jpena): if the bridge host is ever recreated, we will have to update this key
    bridge_key: "{{ bridge_name }},{{ bridge_ip }},bridge ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBAADRnrMKg7ZvvG4zrMCjEnT1/RkfXAagSBYoQfTbzrHj+BoFGDbt4F1rM+PA+cJUJ2KS5ZCktJLWNeyYKCuKOg="
  tasks:
    - add_host:
        name: "{{ bridge_name }}"
        ansible_python_interpreter: python3
        ansible_host: "{{ bridge_ip }}"
        ansible_user: fedora
        ansible_connection: ssh
        groups: bridge

    - known_hosts:
        name: "{{ bridge_name }}"
        key: "{{ bridge_key }}"

- hosts: bridge.softwarefactory-project.io
  gather_facts: yes
  vars:
    bridge_packages:
      - ansible
      - ara
      - cronie
      - dnsmasq
      - python3-cryptography
      - python3-netaddr
      - python3-lxml
      - python3-openstacksdk
      - python3-passlib
      - python3-pyOpenSSL
      - vim-enhanced
      - tmux
      - wget
      - podman
      - postfix
  tasks:
    - block:
        - name: Start zuul_console daemon.
          zuul_console:

        - name: Synchronize src repos to workspace directory.
          synchronize:
            delete: yes
            dest: "~/src/"
            src: "{{ zuul.executor.src_root }}/"
          no_log: true

        - name: Create config directory
          file:
            path: "~/.config/openstack"
            recurse: true
            state: directory

        - name: Copy the clouds.yaml
          template:
            src: clouds.yaml.j2
            dest: ~/.config/openstack/clouds.yaml
            mode: "0400"
          no_log: yes

        - name: Copy the vault password
          copy:
            content: "{{ vault.secret }}"
            dest: "~/.ansible_vault"
            mode: "0400"
          no_log: yes
          when: vault is defined

        - name: Symlink ansible configuration file
          file:
            src: "~/{{ zuul.projects['softwarefactory-project.io/software-factory/sf-infra'].src_dir }}/ansible/ansible.cfg"
            dest: ~/.ansible.cfg
            state: link

        - name: Ensure packages are installed
          become: yes
          package:
            name: "{{ bridge_packages }}"
            state: present

        - name: Add ssh host key for jump.ci.centos.org
          known_hosts:
            name: 'jump.ci.centos.org'
            key: 'jump.ci.centos.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAII5XmG2wsYOwCIUyw/EhbDz9BpUQpaOvJhBuvhKTMgV8'

        - name: Add ssh host key for soeru.osci.io
          known_hosts:
            name: 'soeru.osci.io'
            key: 'soeru.osci.io ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEhsNyfWBf4P1euzS1pJgT3yV+c1AoZA9QJua8H6tv1Y'

        - name: Ensure sf-infra SSH key is deployed
          copy:
            content: "{{ sshkey.id_rsa }}"
            dest: "~/.ssh/id_rsa"
            mode: "0400"
          no_log: yes
          when: sshkey is defined

        - name: Fetch galaxy Roles
          command: ansible-galaxy install --force-with-deps -r requirements.yml
          args:
            chdir: "~/{{ zuul.projects['softwarefactory-project.io/software-factory/sf-infra'].src_dir }}"
          when: fetch_galaxy_role | default(False) | bool

        # Perform one shot actions
        - name: Check for updated actions
          shell: git diff-tree --no-commit-id --name-only -r HEAD | grep '^actions/.*yaml$' | sort
          args:
            chdir: "~/{{ zuul.projects['softwarefactory-project.io/software-factory/sf-infra'].src_dir }}"
          register: _actions_files

        - environment:
            # Provided by Zuul secret
            ARA_API_PASSWORD: "{{ ara_api.password }}"
          block:
            - name: Execute actions
              args:
                chdir: "~/{{ zuul.projects['softwarefactory-project.io/software-factory/sf-infra'].src_dir }}"
              command: "ansible-playbook -v {{ item }}"
              loop: "{{ _actions_files.stdout_lines }}"

            - name: Run configuration playbook
              args:
                chdir: "~/{{ zuul.projects['softwarefactory-project.io/software-factory/sf-infra'].src_dir }}"
              command: "ansible-playbook -vv playbooks/{{ sf_infra_play_name }}.yaml"
