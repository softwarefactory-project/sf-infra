---
- hosts: bridge.softwarefactory-project.io
  gather_facts: yes
  pre_tasks:
    - name: Ensure hostname is correct
      ansible.builtin.hostname:
        name: bridge.softwarefactory-project.io
      become: yes

  roles:
    - bridge/generate-etc-hosts
    - service/manage-accounts
    - service/node-exporter
    - system/psi
    - system/update-host
    - system/journald
    - role: system/secrets-metric
      vars:
        sf_infra_secret_age_files: "{{ q('fileglob', 'host_vars/*.yaml', 'group_vars/*.yaml') }}"

  tasks:
    - name: "Install MTA"
      ansible.builtin.include_role:
        name: postfix
        apply:
          become: yes
      vars:
        myhostname: "{{ smtp_host }}"
        mydomain: "{{ smtp_domain }}"
        myorigin: "{{ smtp_host }}"
        mynetworks:
          - "{{ prometheus_public_ip }}/32"

    - name: Install kubectl and oc
      become: true
      ansible.builtin.unarchive:
        src: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/openshift-client-linux.tar.gz
        dest: /usr/local/bin
        remote_src: yes

    - name: Create ansible registry renew log directory
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: fedora
        group: fedora
      loop:
        - /var/log/quay-cert-renew
        - /var/lib/sf-infra

    - name: Copy renew certificate script
      ansible.builtin.copy:
        content: |
          cd  /home/fedora/src/softwarefactory-project.io/software-factory/sf-infra;
          export ANSIBLE_CONFIG=ansible/ansible.cfg;
          export ANSIBLE_LOG_PATH=/var/log/quay-cert-renew/ansible-$(date '+%Y-%m-%d').log;
          /usr/bin/ansible-playbook playbooks/quay-renew-certificates.yml -i ansible/hosts.yaml
        dest: /var/lib/sf-infra/quay-renew.sh

    - name: Create cron job for renewing certificate
      ansible.builtin.cron:
        name: Renew registry certificate - Quay
        special_time: weekly
        job: bash /var/lib/sf-infra/quay-renew.sh > /dev/null

    - name: Install dnf-automatic
      # https://docs.fedoraproject.org/en-US/quick-docs/autoupdates/
      become: yes
      block:
        - name: Install dnf-automatic
          ansible.builtin.dnf:
            name: "dnf-automatic"

        - name: Configure dnf-automatic
          ansible.builtin.copy:
            dest: /etc/dnf/automatic.conf
            content: |
              [commands]
              apply_updates=True
          register: _config

        - name: Enable dnf-automatic timer
          ansible.builtin.systemd_service:
            name: dnf-automatic.timer
            state: started
            enabled: true

        - name: Restart dnf-automatic timer if config is updated
          ansible.builtin.systemd_service:
            name: dnf-automatic.timer
            state: restarted
          when: _config.changed

    - name: Clear facts cache
      ansible.builtin.meta: clear_facts
