---
# This playbook fetches the logreduce artifacts and copy them to the relevant location
#
# Logreduce update process:
# - Follow the upstream release: `https://github.com/logreduce/logreduce/blob/main/doc/RELEASE-CHECKLIST.md`.
# - Update version in `playbooks/group_vars/all`.
# - Synchronize the upstream roles to the config project for the base job.
- name: Fetch logreduce release
  hosts: localhost
  tasks:
    - name: Fetch the assets
      shell: |
        if ! test -f logreduce/{{ logreduce_version }}/dist/logreduce-web.wasm; then
          mkdir -p logreduce/{{ logreduce_version }}/dist-tmp;
          cd logreduce/{{ logreduce_version }}/dist-tmp;
          for ext in css js wasm; do
            curl -OL https://unpkg.com/logreduce-web@{{ logreduce_version }}/logreduce-web.$ext
          done
          cd ..; mv dist-tmp dist
        fi

    - name: Fetch the command line
      shell: |
        if ! test -f logreduce/{{ logreduce_version }}/bin/logreduce; then
          mkdir -p logreduce/{{ logreduce_version }}
          cd logreduce/{{ logreduce_version }}
          curl -L https://github.com/logreduce/logreduce/releases/download/{{ logreduce_version }}/logreduce-x86_64-linux.tar.bz2 | tar xjvf -
        fi

- name: Install logreduce web assets
  hosts: elk.softwarefactory-project.io
  tasks:
    - name: Copy the assets
      synchronize:
        src: "logreduce/{{ logreduce_version }}/dist/"
        dest: "/var/www/logs/logreduce-assets/{{ logreduce_version }}/"
      become: true

- name: Install logreduce cli
  hosts: ze
  tasks:
    - name: Create working directory
      file:
        path: /var/lib/log-classify
        state: directory
      become: true


    - name: Copy the assets
      synchronize:
        src: "logreduce/{{ logreduce_version }}/bin/"
        dest: "/var/lib/log-classify/{{ logreduce_version }}/"
      become: true
