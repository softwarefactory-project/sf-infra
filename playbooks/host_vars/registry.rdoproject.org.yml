---
openshift_node_group_name: node-config-all-in-one
openshift_schedulable: true
openshift_docker_selinux_enabled: false
openshift_docker_insecure_registries: 172.30.0.0/16
openshift_disable_check: memory_availability,package_version
debug_level: 2
# This is deployed on an OpenStack cloud which defaults eth0 mtu to 1450
# The node mtu must be 50 less than eth0
# https://docs.openshift.com/container-platform/3.5/admin_guide/sdn_troubleshooting.html#builds-on-a-virtual-network-are-failing
openshift_node_sdn_mtu: 1400
# Version and deployment type
openshift_deployment_type: origin
deployment_subtype: registry
openshift_release: "3.11"
# The following services are deployed by default in 3.11, disable them
openshift_cluster_monitoring_operator_install: false
ansible_service_broker_install: false
template_service_broker_install: false
openshift_hosted_manage_registry_console: false
# OpenShift persistent registry volume and claim on local filesystem
openshift_hosted_registry_storage_kind: hostpath
openshift_hosted_registry_storage_access_modes:
  - "ReadWriteOnce"
openshift_hosted_registry_storage_volume_name: registry
openshift_hosted_registry_storage_volume_size: 8Gi
openshift_hosted_registry_storage_hostpath_path: /openshift_volumes/registry
openshift_hosted_registry_persistent_volume_claims:
  - name: registry-claim
    capacity: 50Gi
    access_modes:
      - ReadWriteOnce
# Block device on which docker will set up /var/lib/docker through the
# container-runtime role
container_runtime_docker_storage_type: overlay2
container_runtime_docker_storage_setup_device: /dev/vdb

## Endpoint DNS and SSL
openshift_master_cluster_hostname: internal.registry.rdoproject.org
openshift_master_cluster_public_hostname: registry.rdoproject.org
openshift_master_default_subdomain: apps.registry.rdoproject.org
openshift_master_public_api_url: https://registry.rdoproject.org:8443
openshift_master_api_url: https://internal.registry.rdoproject.org:8443
openshift_master_overwrite_named_certificates: true
openshift_master_named_certificates:
  - certfile: "/home/fedora/letsencrypt/live/registry.rdoproject.org/registry.rdoproject.org-fullchain.pem"
    keyfile: "/home/fedora/letsencrypt/live/registry.rdoproject.org/registry.rdoproject.org-privkey.pem"
    cafile: "/home/fedora/letsencrypt/live/registry.rdoproject.org/registry.rdoproject.org-cert.pem"
    names:
      - registry.rdoproject.org
# Allows the registry and its web console to be scheduled on the single host.
openshift_hosted_infra_selector: ""
# Note: using passthrough termination because reencrypt does not work
# https://github.com/openshift/origin/issues/14249
openshift_hosted_registry_routehost: trunk.registry.rdoproject.org
openshift_hosted_registry_routetermination: reencrypt
openshift_hosted_registry_routecertificates:
  certfile: "/home/fedora/letsencrypt/live/trunk.registry.rdoproject.org/trunk.registry.rdoproject.org-fullchain.pem"
  keyfile: "/home/fedora/letsencrypt/live/trunk.registry.rdoproject.org/trunk.registry.rdoproject.org-privkey.pem"
  cafile: "/home/fedora/letsencrypt/live/trunk.registry.rdoproject.org/trunk.registry.rdoproject.org-cert.pem"


# For SSL cert checking
openshift_certificate_expiry_warning_days: 30
openshift_certificate_expiry_generate_html_report: yes
openshift_certificate_expiry_save_json_results: yes
openshift_certificate_expiry_show_all: yes
# https://access.redhat.com/solutions/4006641
openshift_certificate_expiry_fail_on_warn: false
timestamp: "{{ lookup('pipe', 'date +%Y%m%d-%H:%M') }}"
openshift_certificate_expiry_html_report_path: "/home/fedora/registry-certcheck/{{ timestamp }}-cert-expiry-report.html"
openshift_certificate_expiry_json_results_path: "/home/fedora/registry-certcheck/{{ timestamp }}-cert-expiry-report.json"
