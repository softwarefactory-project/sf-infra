---
# Hack to prevent ansible_user_dir to be /root on the bridge
- hosts: bridge.softwarefactory-project.io
  tasks:
    - name: Clear facts cache
      ansible.builtin.meta: clear_facts

- hosts: centos-infra-zuul-executors
  pre_tasks:
    - name: Install requirements (rpms)
      become: true
      ansible.builtin.package:
        name:
          - python3
          - python3-pip

    - name: Install requirements (pip)
      become: true
      ansible.builtin.pip:
        name: "kubernetes"
  roles:
    - system/volume
    - install-golang
    - sf/setup-microshift
    - sf/k9s
  post_tasks:
    - name: Fetch kubeconfig on the controller
      ansible.builtin.fetch:
        src: /var/lib/microshift/resources/kubeadmin/{{ inventory_hostname }}/kubeconfig
        dest: ~/.kube/{{ inventory_hostname }}
        flat: true
      become: true

- hosts: bridge.softwarefactory-project.io
  gather_facts: yes
  environment:
    OPENSHIFT_USER: true
  tasks:
  - name: Create ~/.kube if it does not exist
    ansible.builtin.file:
      path: "{{ ansible_user_dir }}/.kube"
      state: directory

  - name: Setup centOS Infra kube config file
    ansible.builtin.copy:
      content: "{{ centOSInfra_kube_config }}"
      dest: "{{ kube_config }}"
    no_log: true

  - name: Install go-lang
    ansible.builtin.include_role:
      name: install-golang

  - name: Install Zuul SSH secrets
    kubernetes.core.k8s:
      kubeconfig: "{{ kube_config }}"
      state: present
      definition:
        kind: Secret
        apiVersion: v1
        metadata:
          name: zuul-sf-ssh-secret
          namespace: cloud-softwarefactory
        type: Opaque
        data:
          pub: "{{ centOSInfra_zuul_ssh_pub | b64encode }}"
          priv: "{{ centOSInfra_zuul_ssh_priv | b64encode }}"
    no_log: true

  # TODO Remove this task once sf-operator v0.0.56 is released.
  # We don't want to release right away for reasons, but we need
  # to use a version of sf-operator where the dependency to cert-manager
  # is completely removed.
  - name: Set deployment hash
    ansible.builtin.set_fact:
      sf_operator_standalone_release: 829227c22ea8f7d037f5341a3c32f5e57b6d44de

  - name: Deploy software factory
    include_role:
      name: sf/openshift/install-software-factory

  - name: Delete networking resources if needed
    # Some fields of a route cannot be updated once created. Delete and recreate the route if needed
    when: false
    ansible.builtin.command: >-
      kubectl delete -f ../playbooks/files/centos-infra/networking.yaml
    environment:
      KUBECONFIG: "{{ kube_config }}"

  - name: Deploy networking resources if needed
    when: true
    ansible.builtin.command: >-
      kubectl apply -f ../playbooks/files/centos-infra/networking.yaml
    environment:
      KUBECONFIG: "{{ kube_config }}"

  - name: Get load balancer public IP (zookeeper)
    block:
      - register: zk_lb
        ansible.builtin.command: >-
          kubectl get service zookeeper-lb -o jsonpath={.status.loadBalancer.ingress[0]}
        environment:
          KUBECONFIG: "{{ kube_config }}"
      - set_fact:
          _zk_public_hostname: "{{ zk_lb.stdout|from_json }}"
      - set_fact:
          zk_public_hostname: "{{ _zk_public_hostname.ip }}"
        when: _zk_public_hostname.ip is defined
      - set_fact:
          zk_public_hostname: "{{ _zk_public_hostname.hostname }}"
        when: _zk_public_hostname.hostname is defined

  - name: Get load balancer public IP (gitserver)
    block:
      - register: gs_lb
        ansible.builtin.command: >-
          kubectl get service git-server-ro-lb -o jsonpath={.status.loadBalancer.ingress[0]}
        environment:
          KUBECONFIG: "{{ kube_config }}"
      - set_fact:
          _gitserver_public_hostname: "{{ gs_lb.stdout|from_json }}"
      - set_fact:
          gitserver_public_hostname: "{{ _gitserver_public_hostname.ip }}"
        when: _gitserver_public_hostname.ip is defined
      - set_fact:
          gitserver_public_hostname: "{{ _gitserver_public_hostname.hostname }}"
        when: _gitserver_public_hostname.hostname is defined

# Configure external executors
  - ansible.builtin.set_fact:
      control_plane:
          kubeconfig: "{{ kube_config }}"
          extra_secrets:
          - zuul-sf-ssh-secret
          # Append Zuul Connection Secrets when they are defined
          - zuul-github-com-connection
          extra_configmaps: []
          fqdn: "gateway-cloud-softwarefactory.apps.ocp.cloud.ci.centos.org"
          zuul_connections: "{{ hostvars['bridge.softwarefactory-project.io']['zuul_connections'] }}"
          public_zookeeper_hostname: "{{ hostvars['bridge.softwarefactory-project.io']['zk_public_hostname'] }}"
          public_gitserver_hostname: "{{ hostvars['bridge.softwarefactory-project.io']['gitserver_public_hostname'] }}"

  - name: Setup external executors
    include_role:
      name: sf/openshift/external-zuul-executor
    vars:
      executor_plane:
          kubeconfig: "/home/fedora/.kube/{{ msze }}"
          install_prometheus_operator: false
          namespace: sf
          public_ip: "{{ hostvars[msze]['public_ip'] }}"
    loop: "{{ groups['centos-infra-zuul-executors'] }}"
    loop_control:
      loop_var: msze

# Enable builder connection
  - name: Get nodepool builder key
    ansible.builtin.command: >-
      kubectl get secret nodepool-builder-ssh-key -o jsonpath={.data.pub}
    register: builder_pubkey
    environment:
      KUBECONFIG: "{{ kube_config }}"

- hosts: image-builder.softwarefactory-project.io
  gather_facts: yes
  become: true
  tasks:
    - ansible.builtin.set_fact:
        builder_pubkey: "{{ hostvars['bridge.softwarefactory-project.io']['builder_pubkey'] }}"

    - name: Add builder key to image-builder
      ansible.posix.authorized_key:
        user: nodepool
        state: present
        key: "{{ builder_pubkey.stdout | b64decode }}"
