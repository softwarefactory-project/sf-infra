---
- hosts: bridge.softwarefactory-project.io
  gather_facts: yes
  pre_tasks:
    - name: Ensure hostname is correct
      hostname:
        name: bridge.softwarefactory-project.io
      become: yes
  roles:
    - bridge-accounts
    - generate-etc-hosts
  tasks:
    - name: "Install MTA"
      include_role:
        name: postfix
        apply:
          become: yes
      vars:
        myhostname: "{{ smtp_host }}"
        mydomain: "{{ smtp_domain }}"
        myorigin: "{{ smtp_host }}"
        mynetworks:
          - "{{ prometheus_public_ip }}/32"

- hosts: all:!osci_zone:!sf:!lambda.softwarefactory-project.io:!osci_internal_zone
  roles:
    - sf-infra-base

- hosts: all:!sf
  roles:
    - node-exporter

- hosts: backup-rdo
  roles:
    - backup-client

- hosts: backup-server
  vars_files:
    - vars/dlrn-db.yaml
  roles:
    - mysqld-exporter
    - backup-srv
    - backup-monitoring

- hosts: afs-mirror
  roles:
    - setup-ssl
    - afs-mirror
    - afs-monitoring

- hosts: rdo
  roles:
    - sf-ssh

- hosts: managesf.review.rdoproject.org
  roles:
    - hostname
    - sf-install-server
    - acme-tiny

- hosts: dlrn
  vars_files:
    - vars/dlrn.yaml
  roles:
    - firewalld
    - dlrn-server

- hosts: trunk.rdoproject.org
  roles:
    - apache-exporter

- hosts:
    - trunk-centos7.rdoproject.org
    - trunk-centos8.rdoproject.org
    - centos8-rpm-packaging-ci.rdoproject.org
  roles:
    - swap

- hosts: logserver.rdoproject.org
  roles:
    - hostname
    - volume
    - logserver
    - setup-ssl

- hosts: images.rdoproject.org
  roles:
    - hostname
    - volume
    - setup-ssl
    - firewalld
    - {role: image-server, become: true}

- hosts: www.rdoproject.org
  roles:
    - hostname
  tasks:
    - name: "Enable EPEL"
      package:
        name:
          - epel-release
      become: yes
    - name: "Deploy websites"
      include_role:
        name: websites
        tasks_from: vhosts
        apply:
          become: yes

# after www.rdoproject.org
- hosts: rdo-web-builder.int.osci.io
  roles:
    - hostname
  tasks:
    - name: "Enable EPEL"
      package:
        name:
          - epel-release
      become: yes
    - name: "Deploy websites"
      include_role:
        name: websites
        tasks_from: builders
        apply:
          become: yes

- hosts: lists.rdoproject.org:lists-ng.rdoproject.org
  become: yes
  roles:
    - hostname
    # already created on lists.rdoproject.org and lists-ng is handled differently
    #- swap
  handlers:
    - name: "Clean YUM Metadata"
      command: yum clean metadata
      args:
        warn: no

  tasks:
    - name: "Enable EPEL"
      package:
        name:
          - epel-release

    - name: "Setup the OSPO/OSCI Infra repo"
      yum_repository:
        name: ospo_osci_infra
        description: "Copr repo for OSPO ComInfra Team"
        baseurl: "https://copr-be.cloud.fedoraproject.org/results/duck/osas-infra-team-rpm-repo/epel-{{ ansible_distribution_major_version }}-$basearch/"
        gpgkey: "https://copr-be.cloud.fedoraproject.org/results/duck/osas-infra-team-rpm-repo/pubkey.gpg"
        repo_gpgcheck: False
        gpgcheck: True
        skip_if_unavailable: True
        state: present
        enabled: True
      when: ansible_os_family == 'RedHat'
      notify: Clean YUM Metadata

    - meta: flush_handlers

    - name: "Deploy mailing-lists"
      include_role:
        name: mailing_lists
      vars:
        # data_dev and ml_type are defined int he inventory
        data_path: /srv/data

- hosts: dlrn-db.rdoproject.org
  vars_files:
    - vars/dlrn-db.yaml
  roles:
    - hostname
    - firewalld
    - mysqld-exporter
  tasks:
    - include_role:
        name: mariadb-replicated
        tasks_from: master.yml

- hosts: elk.rdoproject.org
  roles:
    - volume
    - log-gearman
  tasks:
    - include_role:
        name: elasticsearch
        tasks_from: check_es.yaml

- hosts: quay.rdoproject.org
  pre_tasks:
    - name: Setup Quay partition
      # NOTE: take care: some variables are devices and some device.
      vars:
        lvm: "{{ partitions['quay']['lvm'] | default('') }}"
        devices: "{{ partitions['quay']['devices'] | list | default('') }}"
        mountpoint: "{{ partitions['quay']['mountpoint'] | default('') }}"
        vg_name: "{{ partitions['quay']['vg_name'] | default('') }}"
        lv_name: "{{ partitions['quay']['lv_name'] | default('') }}"
      include_role:
        name: volume
    - name: Setup Postgres partition
      vars:
        lvm: "{{ partitions['db']['lvm'] | default('') }}"
        device: "{{ partitions['db']['device'] | default('') }}"
        mountpoint: "{{ partitions['db']['mountpoint'] | default('') }}"
      include_role:
        name: volume
  roles:
    - hostname
    - setup-ssl
    - quay
  vars:
    self_signed_certs: false
    initial_config: false
    # Use standalone server to get SSL certs from certbot
    additional_params: '--standalone'
    http_service_name: 'standalone'

- hosts: opensearch.rdoproject.org
  pre_tasks:
    - name: Setup Opensearch partition
      vars:
        lvm: "{{ partitions['opensearch']['lvm'] | default('') }}"
        devices: "{{ partitions['opensearch']['devices'] | list | default('') }}"
        mountpoint: "{{ partitions['opensearch']['mountpoint'] | default('') }}"
        vg_name: "{{ partitions['opensearch']['vg_name'] | default('') }}"
        lv_name: "{{ partitions['opensearch']['lv_name'] | default('') }}"
      include_role:
        name: volume
  roles:
    - hostname
    - setup-ssl
    - {name: ansible-role-elastic-recheck, become: true}
