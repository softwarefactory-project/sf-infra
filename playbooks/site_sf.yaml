---
- ansible.builtin.import_playbook: site_bridge.yaml

- hosts: rhel
  roles:
    - system/rhel-subscription

- hosts: epel
  roles:
    - system/epel-release

- hosts: microshift-infra.softwarefactory-project.io
  roles:
    - system/volume
    - sf/setup-microshift
    - sf/k9s

- hosts: microshift.softwarefactory-project.io
  roles:
    - sf/setup-microshift
    - sf/k9s
    - sf/openshift/install-sf-operator
    - sf/openshift/install-software-factory
    - sf/openshift/install-cert-manager-openshift-routes
    - sf/openshift/install-prometheus
    - sf/openshift/install-logjuicer

- hosts: k1s
  roles:
    - sf/k1s
    - service/node-exporter

- hosts: sf
  roles:
    - system/tune-dnf
    - infra/base
    - infra/ssh
    - service/node-exporter
    - system/update-host
    - system/podman
    - system/journald

- hosts: backup-sf
  roles:
    - service/backup-client

- hosts: centos.softwarefactory-project.io
  roles:
    - service/acme-tiny
    - system/volume
    - service/apache-exporter
    - system/users

- hosts: image-builder.softwarefactory-project.io
  roles:
    - sf/image-builder
    - sf/podman-pruner
    # Keep in sync with zuul-weeder security group and prometheus dhall configuration
    - sf/zuul-weeder
    - sf/cloud-image-builder

- hosts: bridge.softwarefactory-project.io
  tasks:
    - name: Synchronize zuul config for zuul-weeder service
      ansible.builtin.command: >
        ansible-playbook --extra-vars 'scheduler={{ scheduler }} zuul_weeder={{ zuul_weeder }}'
        tasks/zuul-weeder-sync-zuul-config.yaml
      register: _debug_zuul_weeder
      vars:
        scheduler: zs.softwarefactory-project.io
        zuul_weeder: image-builder.softwarefactory-project.io

    - ansible.builtin.debug:
        var: _debug_zuul_weeder.stdout_lines

- hosts: ze
  tasks:
    - name: Install rpmspec with rpm-build for Fedora Zuul CI zob
      ansible.builtin.yum:
        name: rpm-build
      become: yes

- hosts: managesf.softwarefactory-project.io
  roles:
    - infra/install-server
    - infra/ssh
    - service/acme-tiny
    - service/apache-exporter
    - service/hostname
  tasks:
    - name: Add gitiles to disallow in robot.txt
      become: true
      ansible.builtin.lineinfile:
        path: /var/www/robots.txt
        insertafter: "^Disallow: /r/gitweb/*"
        line: "Disallow: /r/plugins/gitiles"

    - name: Add more user-agents to disallow in robot.txt
      become: true
      ansible.builtin.lineinfile:
        path: /var/www/robots.txt
        insertafter: "^User-agent: PetalBot"
        line: |
          User-agent: Amazonbot
          User-agent: Yandex
          User-agent: EtaoSpider
          User-Agent: Bytespider
          User-Agent: AhrefsBot

    - name: Add vhosts
      ansible.builtin.include_role:
        name: "{{ item }}"
        tasks_from: vhost.yaml
      loop:
        - sf/monitoring-gateway
        - sf/zuul-weeder
        - sf/logjuicer

- hosts: prometheus.monitoring.softwarefactory-project.io
  pre_tasks:
    - name: Install requirements
      ansible.builtin.package:
        name:
          - podman
          - dnsmasq
      become: yes
    - name: get slack webhook URL
      ansible.builtin.include_vars:
        file: ~/.slack_api_url.yaml
      delegate_to: localhost
      no_log: yes
  roles:
    - bridge/generate-etc-hosts
    - service/firewalld
    - service/hostname
    # sf/monitoring-gateway is included to setup vhost on port 80 for service/setup-ssl
    - sf/monitoring-gateway
    - service/setup-ssl
    - sf/alert-manager
    - sf/blackbox-exporter
    - sf/dnsmasq
    - sf/grafana
    # sf/monitoring-gateway is included here to setup vhost on 80 + 443
    - sf/monitoring-gateway
    - sf/prometheus
    # pushprox is disabled for no package exist for epel-9
    # - sf/pushprox
    - sf/statsd-exporter
    - sf/udp-multiplexer
    - service/node-exporter
    - service/apache-exporter

- hosts: zs.softwarefactory-project.io
  roles:
    - sf/openstack-simply-reporter
    - sf/zuul_cli_access
    - sf/zookeeper-exporter

- hosts: elk.softwarefactory-project.io
  roles:
    - { name: "logscraper", become: true }
    - { name: "logsender", become: true }
    - system/volume

- hosts: fedora.softwarefactory-project.io
  roles:
    - service/acme-tiny
    - service/apache-exporter
    - sf/fm-gateway
    - system/volume

- hosts: nodepool-builder
  roles:
    - sf/builder-cleanup
    - sf/manage-upstream-config-project
    - system/volume

- hosts: koji.softwarefactory-project.io
  roles:
    - service/firewalld

- hosts: ansible.softwarefactory-project.io
  roles:
    - service/acme-tiny
    - service/apache-exporter

- hosts: logscraper01.openstack.org
  roles:
    - service/node-exporter

- hosts: ibm-baremetal-nodepool
  roles:
    - service/apache-exporter
    - sf/nodepool-self-signed-crt

- hosts: ibm-instance
  roles:
    - sf/hostname
  tasks:
    - name: Ensure zookeeper host is on /etc/hosts
      ansible.builtin.lineinfile:
        dest: "/etc/hosts"
        regexp: "^{{ zookeeper_instance.public_ip }} {{ zookeeper_instance.host }}.*"
        line: "{{ zookeeper_instance.public_ip }} {{ zookeeper_instance.host }}"
        state: present
      become: yes
      register: hosts_updated

    # - name: Get running services which need zk
    #   shell: systemctl | grep -E 'zuul|nodepool'
    #   register: _service

    # - name: Restart services if /etc/hosts is updated
    #   ansible.builtin.systemd:
    #     state: restarted
    #     name: "{{ _service.stdout }}"
    #   become: yes
    #   when: hosts_updated.changed
