---
- name: Get running services
  ansible.builtin.service_facts:

- name: Configure dnsmasq and NetworkManager when no crc-pre service
  when: "'crc-pre' not in services"
  block:
    - name: Do not overwrite /etc/resolv.conf
      become: true
      ansible.builtin.copy:
        content: |
          [main]
          dns=none
        dest: /etc/NetworkManager/conf.d/00-custom-crc.conf
      register: _nm_state

    - name: Reload NetworkManager
      become: true
      ansible.builtin.service:
        name: NetworkManager
        state: reloaded

    - name: Ensure that the host ip address is in /etc/resolv.conf
      become: true
      ansible.builtin.lineinfile:
        path: /etc/resolv.conf
        insertafter: '^# Generated by NetworkManager'
        line: |
          # Added by the Zuul base job
          nameserver {{ ansible_default_ipv4.address }}
        firstmatch: true

    - name: Check if dnsmasq config exists
      become: true
      ansible.builtin.stat:
        path: /var/srv/dnsmasq.conf
      register: _legacy_dnsmasq_config

    - name: Set host ip address for crc.testing when legacy
      become: true
      when: _legacy_dnsmasq_config.stat.exists
      ansible.builtin.replace:
        path: /var/srv/dnsmasq.conf
        regexp: "192.168.130.11"
        replace: "{{ ansible_default_ipv4.address }}"

    - name: Configure dnsmasq when not legacy
      when: not _legacy_dnsmasq_config.stat.exists
      block:
        - name: Set host ip address for crc.testing
          become: true
          ansible.builtin.replace:
            path: /etc/dnsmasq.d/crc-dnsmasq.conf
            regexp: "192.168.130.11"
            replace: "{{ ansible_default_ipv4.address }}"
          register: _dnsmasq_conf

        - name: Ensure that bind-interfaces is set in dnsmasq
          become: true
          ansible.builtin.lineinfile:
            path: /etc/dnsmasq.d/crc-dnsmasq.conf
            insertbefore: '^server'
            line: 'bind-interfaces'
            firstmatch: true

        - name: Set DNS nameservers provided by cloud provider
          become: true
          ansible.builtin.lineinfile:
            path: /etc/dnsmasq.d/crc-dnsmasq.conf
            line: "server={{ item }}"
          loop: "{{ ansible_dns.nameservers }}"

    - name: Reboot host after apply changes
      when: _nm_state.changed or _dnsmasq_conf.changed
      become: true
      ansible.builtin.reboot:

    - name: Get running services
      ansible.builtin.service_facts:

- name: Get service status - crc-dnsmasq
  become: true
  ansible.builtin.systemd:
    name: crc-dnsmasq
  register: crc_dnsmasq_status

- name: Ensure dnsmasq is running
  when: >
    'crc-dnsmasq.service' not in ansible_facts.services or
    ('ActiveState' in crc_dnsmasq_status.status and
    crc_dnsmasq_status.status['ActiveState'] == 'inactive')
  become: true
  ansible.builtin.service:
    name: dnsmasq
    state: started

- name: Ensure crc-dnsmasq is running when legacy
  when: >
    'crc-dnsmasq.service' in ansible_facts.services and
    ('UnitFileState' in crc_dnsmasq_status.status and
    crc_dnsmasq_status.status["UnitFileState"] == "enabled")
  block:
    - name: Ensure dnsmasq is stopped
      become: true
      ansible.builtin.systemd:
        name: dnsmasq
        state: stopped
        enabled: false

    - name: Restart crc-dnsmasq
      become: true
      ansible.builtin.systemd:
        name: crc-dnsmasq
        state: restarted
