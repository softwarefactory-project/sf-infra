---
- name: Fail when cloud_names not set
  when: not cloud_names
  ansible.builtin.fail:
    msg: "cloud_names variable needs to be set!"

- name: Copy cleanup script
  become: true
  ansible.builtin.copy:
    src: cleanup-openstack-resources.sh
    dest: /usr/local/bin/cleanup-openstack-resources.sh
    mode: 0755

- name: Create log directory for cleanup-openstack-resources.sh
  become: true
  ansible.builtin.file:
    path: "{{ cleaner_log_dir }}"
    state: directory
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"

- name: Create crontab for cleanup-openstack-resources.sh
  ansible.builtin.cron:
    name: Cleanup {{ project.crc_cloud_name }} project OpenStack resources
    minute: "0"
    hour: "*/3"
    job: >
      export OS_CLOUD={{ project.crc_cloud_name }};
      export CRC_VENV_DIR={{ crc_venv_dir }};
      /usr/local/bin/cleanup-openstack-resources.sh &> {{ cleaner_log_dir }}/cleanup-{{ project.crc_cloud_name }}.log
  loop: "{{ cloud_names }}"
  loop_control:
    loop_var: project

- name: Install logrotate configuration file
  become: yes
  ansible.builtin.copy:
    dest: "/etc/logrotate.d/cleanup-openstack-resources"
    content: |
     {{ cleaner_log_dir }}/*.log {
         compress
         create
         compress
         daily
         dateext
         missingok
         rotate 7
     }
    mode: "0640"
  loop: "{{ cloud_names }}"
  loop_control:
    loop_var: project
