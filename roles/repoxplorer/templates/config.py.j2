import os
import sys
import copy

from repoxplorer.controllers.renderers import CSVRenderer

runtimedir = '/var/lib/repoxplorer'

# RepoXplorer configuration file
base_logging = {
    'version': 1,
    'root': {'level': 'DEBUG', 'handlers': ['normal']},
    'loggers': {
        'indexerDaemon': {
            'level': 'DEBUG',
            'handlers': ['normal', 'console'],
            'propagate': False,
        },
        'repoxplorer': {
            'level': 'DEBUG',
            'handlers': ['normal', 'console'],
            'propagate': False,
        },
        'elasticsearch': {
            'level': 'WARN',
            'handlers': ['normal', 'console'],
            'propagate': False,
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'console'
        },
        'normal': {
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'level': 'DEBUG',
            'formatter': 'normal',
            'filename': '',
            'when': 'D',
            'interval': 1,
            'backupCount': 30,
        },
    },
    'formatters': {
        'console': {'format': ('%(levelname)-5.5s [%(name)s] %(message)s')},
        'normal': {'format': ('%(asctime)s %(levelname)-5.5s [%(name)s]'
                              ' %(message)s')},
    }
}

# Internal dev pecan server
server = {
    'port': '51000',
    'host': '0.0.0.0'
}

# Pecan REST and rendering configuration
app = {
    'root': 'repoxplorer.controllers.root.RootController',
    'modules': ['repoxplorer'],
    'custom_renderers': {'csv': CSVRenderer},
    'static_root': '/usr/share/repoxplorer/public',
    'debug': False,
    'errors': {
        404: '/error/e404',
        '__force_dict__': True
    }
}

# Additional RepoXplorer configurations
db_default_file = None
db_path = '%s/db' % runtimedir
db_cache_path = '%s/cache' % runtimedir
git_store = '%s/git_store' % runtimedir
xorkey = None
elasticsearch_host = "{{ elasticsearch_host }}"
elasticsearch_port = {{ elasticsearch_port }}
elasticsearch_index = "{{ elasticsearch_index }}"
indexer_loop_delay = {{ indexer_loop_delay }}
indexer_skip_projects = {{ indexer_skip_projects }}
index_custom_html = "{{ index_custom_html }}"
users_endpoint = {{ users_endpoint }}
admin_token = "{{ admin_token }}"
# Absolute path to a helper. If not set or None use the default provided helper
git_credential_helper_path = {{ git_credential_helper_path }}

# Logging configuration for the wsgi app
logging = copy.deepcopy(base_logging)
logging['handlers']['normal']['filename'] = (
    '%s/repoxplorer-api.log' % runtimedir)

# Logging configuration for the indexer
indexer_logging = copy.deepcopy(base_logging)
indexer_logging['handlers']['normal']['filename'] = (
    '%s/repoxplorer-indexer.log' % runtimedir)

# Add this to activate OpenID Connect as your authentication method.
oidc = {
    # issuer_url: used to fetch the issuer's configuration by appending
    # .well-known/openid-configuration to it
    'issuer_url': 'https://path/to/idp',
    # Defaults to True, set to False for development
    'verify_ssl': True,
    # This must be equal to the "aud" claim in the tokens sent back by your
    # OpenID Connect provider.
    'audience': 'repoxplorer',
}
