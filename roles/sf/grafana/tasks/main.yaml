---
- name: Create host directories
  become: yes
  file:
    path: '{{ item.path }}'
    state: directory
    recurse: yes
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
  loop:
    - path: /etc/grafana/provisioning/datasources
    - path: /etc/grafana/provisioning/dashboards
    - path: /etc/grafana/secrets
    - path: /var/lib/grafana
      owner: 472

- name: Install main dashboard configuration file
  become: true
  ansible.builtin.copy:
    src: dashboards.yml
    dest: /etc/grafana/provisioning/dashboards/dashboards.yml

- name: Install dashboards
  become: yes
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/etc/grafana/provisioning/dashboards/{{ item }}"
  loop: "{{ grafana_dashboard_directories }}"
  register: _grafana_config

- name: Install config templates
  become: yes
  ansible.builtin.template:
    src: '{{ item.name }}.j2'
    dest: '/etc/{{ item.path }}/{{ item.name }}'
  loop:
    - name: datasource_prometheus.yml
      path: grafana/provisioning/datasources
    - name: grafana.ini
      path: grafana
  register: _grafana_template

# NOTE: Make a workaround for Zuul secret that variable is available for
# zuul, but condition "when: sf_grafana is defined" does not pass.
- name: Create admin secret file
  become: true
  copy:
    content: '{{ sf_grafana.password }}'
    dest: /etc/grafana/secrets/admin_password
  when: "{{ sf_grafana | default(False) }}"

- name: Create admin user file
  become: true
  copy:
    content: "{{ sf_grafana.user }}"
    dest: /etc/grafana/secrets/admin_user
  when: "{{ sf_grafana | default(False) }}"

- include_role:
    name: service/container
  vars:
    pod_name: grafana
    pod_param: >
      --network host
      -v /etc/grafana:/etc/grafana:Z
      -v /var/lib/grafana/:/var/lib/grafana/:z
      {% if sf_grafana | default(False) %}
      -e GF_SECURITY_ADMIN_PASSWORD__FILE='/etc/grafana/secrets/admin_password'
      -e GF_SECURITY_ADMIN_USER__FILE='/etc/grafana/secrets/admin_user'
      -e GF_AUTH_ANONYMOUS_ENABLED='true'
      -e GF_USERS_ALLOW_SIGN_UP='true'
      -e "GF_INSTALL_PLUGINS=grafana-opensearch-datasource,marcusolsson-json-datasource,fifemon-graphql-datasource"
      {% endif %}
      {{ container_images['grafana'] | default('docker.io/grafana/grafana:latest') }}
    pod_config: "{{ _grafana_config }}"
    pod_template: "{{ _grafana_template }}"
