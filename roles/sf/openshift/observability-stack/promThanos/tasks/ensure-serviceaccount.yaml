---
- name: Ensure service account exists
  kubernetes.core.k8s:
    state: present
    definition:
      kind: ServiceAccount
      metadata:
        name: "{{ prometheus_serviceaccount_name }}"
        namespace: "{{ observability_stack_namespace }}"
      labels:
        app: observability
        run: prometheus

- name: Ensure prometheus cluster role exists
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: "{{ prometheus_serviceaccount_name }}-clusterrole"
      rules:
      - apiGroups:
        - ""
        resources:
        - nodes
        - nodes/metrics
        - services
        - endpoints
        - pods
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ""
        resources:
        - configmaps
        verbs:
        - get
      - apiGroups:
        - networking.k8s.io
        resources:
        - ingresses
        verbs:
        - get
        - list
        - watch
      - nonResourceURLs:
        - /metrics
        verbs:
        - get

- name: Ensure prometheus cluster role binding exists
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: "{{ prometheus_serviceaccount_name }}-clusterrolebinding"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: "{{ prometheus_serviceaccount_name }}-clusterrole"
      subjects:
      - kind: ServiceAccount
        name: "{{ prometheus_serviceaccount_name }}"
        namespace: "{{ observability_stack_namespace }}"

- name: Ensure Security Context Constraints on prometheus serviceaccount
  ansible.builtin.command: >
    oc adm policy
    add-scc-to-user
    privileged system:serviceaccount:{{ observability_stack_namespace }}:{{ prometheus_serviceaccount_name }}
