kind: Deployment

# replicaCount -- Only applicable if kind=Deployment
replicaCount: {{ fluentbit_replica_count }}

image:
  repository: cr.fluentbit.io/fluent/fluent-bit
{% if fluentbit_debug %}
  tag: {{ fluentbit_tag }}-debug
{% else %}
  tag: {{ fluentbit_tag }}
{% endif %}
  digest:
  pullPolicy: IfNotPresent

testFramework:
  enabled: false

serviceAccount:
  create: false

rbac:
  create: false

# OpenShift-specific configuration
openShift:
  enabled: true
  securityContextConstraints:
    # Create SCC for Fluent-bit and allow use it
    create: false
    name: ""
    annotations: {}
    # Use existing SCC in cluster, rather then create new one
    existingName: ""

podSecurityContext: {}
#   fsGroup: 2000

hostNetwork: false
dnsPolicy: ClusterFirst

dnsConfig: {}
#   nameservers:
#     - 1.2.3.4
#   searches:
#     - ns1.svc.cluster-domain.example
#     - my.dns.search.suffix
#   options:
#     - name: ndots
#       value: "2"
#     - name: edns0

hostAliases: []

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

service:
  type: ClusterIP
  port: 2020
  loadBalancerClass:
  loadBalancerSourceRanges: []
  labels:
    app: observability
    run: fluentbit
  # nodePort: 30020
  # clusterIP: 172.16.10.1
  annotations: {}
#   prometheus.io/path: "/api/v1/metrics/prometheus"
#   prometheus.io/port: "2020"
#   prometheus.io/scrape: "true"
  externalIPd: []

serviceMonitor:
  enabled: {{ enable_service_monitor }}
  namespace: {{ fluentbit_observability_namespace }}
  interval: 10s
  scrapeTimeout: 10s
  selector:
    matchLabels:
      app: observability
      run: fluentbit

dashboards:
  enabled: false

prometheusRule:
  enabled: false

lifecycle: {}
#   preStop:
#     exec:
#       command: ["/bin/sh", "-c", "sleep 20"]

livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http

resources: {}

## only available if kind is Deployment
ingress:
  enabled: false

## only available if kind is Deployment
autoscaling:
  vpa:
    enabled: false
  enabled: false

## only available if kind is Deployment
podDisruptionBudget:
  enabled: false
  annotations: {}
  maxUnavailable: "30%"

nodeSelector: {}

tolerations: []

affinity: {}

labels:
  app: observability
  run: fluentbit

annotations: {}

podAnnotations: {}

podLabels:
  app: observability
  run: fluentbit

## How long (in seconds) a pods needs to be stable before progressing the deployment
##
minReadySeconds:

## How long (in seconds) a pod may take to exit (useful with lifecycle hooks to ensure lb deregistration is done)
##
terminationGracePeriodSeconds:

priorityClassName: ""

env: []

envFrom:
  - secretRef:
      name: fluentbit-config-secrets

extraContainers: []

flush: 1

metricsPort: 2020

extraPorts:
  - port: 5140
    containerPort: 5140
    protocol: TCP
    name: fb-http-input
  - port: 24224
    containerPort: 24224
    protocol: TCP
    name: fb-fwd-input

extraVolumes:
  - name: fb-buffer-storage
    emptyDir:
      sizeLimit: {{ fluentbit_buffer_size }}
{% if fluentbit_CA_configmap is defined %}
  - name: ca-volume
    configMap:
      name: {{ fluentbit_CA_configmap }}
{% endif %}

extraVolumeMounts:
  - name: fb-buffer-storage
    mountPath: /buffer-storage/
{% if fluentbit_CA_configmap is defined %}
  - name: ca-volume
    mountPath: /CAs
{% endif %}

luaScripts: {}

## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/classic-mode/configuration-file
config:
  service: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level info
        Parsers_File /fluent-bit/etc/parsers.conf
        Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On
        storage.path /buffer-storage
        storage.sync normal
        storage.max_chunks_up {{ fluentbit_max_storage_chunks }}

  ## https://docs.fluentbit.io/manual/pipeline/inputs
  inputs: |
{% if fluentbit_http_input %}
    [INPUT]
        Name http
        Port 5140
        Storage.type filesystem
{% endif %}

    [INPUT]
        Name forward
        Port 24224
        Storage.type filesystem
{% if fluentbit_forward_shared_key is defined %}
        Shared_Key {{ fluentbit_forward_shared_key }}
{% endif %}

{% if fluentbit_custom_inputs is defined %}
{{ fluentbit_custom_inputs|indent(4) }}
{% endif %}

{% if fluentbit_custom_filters is defined %}
  filters: |
{{ fluentbit_custom_filters|indent(4) }}
{% else %}
  filters: ""
{% endif %}

  ## https://docs.fluentbit.io/manual/pipeline/outputs
  outputs: |
{% if fluentbit_debug %}
    [OUTPUT]
        name    stdout
        match   *
        format  json_lines
{% endif %}

    [OUTPUT]
        name        loki
        match       *
        storage.total_limit_size    {{ fluentbit_loki_output_storage_limit }}
        host        {{ fluentbit_loki_endpoint }}
        uri         {{ fluentbit_loki_path }}
        port        {{ fluentbit_loki_port }}
        tls         on
{% if fluentbit_debug %}
        tls.debug   4
{% endif %}
{% if fluentbit_loki_tls.insecure %}
        tls.verify  off
{% else %}
        tls.verify  on
{% if fluentbit_CA_configmap is defined %}
        tls.ca_file /CAs/{{ fluentbit_CA_file }}
{% endif %}
{% endif %}
        http_user   ${GATEWAY_USER}
        http_passwd ${GATEWAY_PASSWORD}
        tenant_id   ${LOKI_TENANT}

        labels      namespace=$namespace, clusternode=$nodename, application=$component, pod=$podname, podip=$podip, job={{ fluentbit_job_label }}, container=$container{% if fluentbit_extra_labels != "" %}, {{ fluentbit_extra_labels }}{% endif %}

        remove_keys namespace, podname, podip, nodename, component, container

{% if fluentbit_custom_parsers is defined %}
  customParsers: |
{{ fluentbit_custom_parsers|indent(4) }}
{% else %}
  customParsers: ""
{% endif %}

  extraFiles: {}

logLevel: info

initContainers: []

hotReload:
  enabled: false