---
- name: Setup namespace
  when: sf_setup_namespace | bool
  block:
    - name: Create Namespace {{ sf_namespace }}
      kubernetes.core.k8s:
        kubeconfig: "{{ kube_config }}"
        state: present
        kind: Namespace
        name: "{{ sf_namespace }}"

    - name: Add Security Context Constraints to User
      ansible.builtin.command: >
        oc adm policy
        add-scc-to-user
        privileged system:serviceaccount:{{ sf_namespace }}:default
      environment:
        KUBECONFIG: "{{ kube_config }}"

# When this Secret 'sf-ssl-cert' is set then sf-operator uses its content to setup Routes' TLS.
- name: Install TLS Secret for the Route
  kubernetes.core.k8s:
    kubeconfig: "{{ kube_config }}"
    state: present
    name: sf-ssl-cert
    definition: "{{ sf_ssl_cert_secret }}"
  no_log: true
  when: sf_ssl_cert_secret is defined

# When this ConfigMap 'corporate-ca-certs' is set then sf-operator adds the CA Cert(s) to the
# containers CA Trust chains
- name: Install corporate-ca-certs for CA Trust Chains
  kubernetes.core.k8s:
    kubeconfig: "{{ kube_config }}"
    state: present
    name: corporate-ca-certs
    definition: "{{ corporate_ca_certs }}"
  when: corporate_ca_certs is defined

- name: Install Nodepool providers secrets
  kubernetes.core.k8s:
    kubeconfig: "{{ kube_config }}"
    state: present
    definition: "{{ nodepool_providers_secrets }}"
  no_log: true
  when: nodepool_providers_secrets is defined

- name: Install Zuul connections secrets
  kubernetes.core.k8s:
    kubeconfig: "{{ kube_config }}"
    state: present
    definition: "{{ item }}"
  no_log: true
  loop: "{{ zuul_connections_secrets }}"
  when: zuul_connections_secrets is defined

- name: Apply the SF Custom Resource
  kubernetes.core.k8s:
    kubeconfig: "{{ kube_config }}"
    state: present
    definition: "{{ software_factory }}"
  when: not (sf_operator_standalone | bool)

- name: Apply the SF Custom Resource (standalone)
  when: sf_operator_standalone | bool
  block:
    - name: Ensure system packages
      become: true
      ansible.builtin.package:
        name:
          - golang-bin

    - name: Ensure sf-operator repository
      ansible.builtin.git:
        repo: "https://softwarefactory-project.io/r/software-factory/sf-operator"
        dest: ~/sf-operator
        version: "{{ sf_operator_standalone_release }}"
        force: true

    - name: Ensure applied CRs location directory
      ansible.builtin.file:
        path: ~/sf-operator-last-applied-crs
        state: directory

    - name: Copy the CR on the filesystem
      ansible.builtin.copy:
        content: "{{ software_factory }}"
        dest: ~/sf-operator-last-applied-crs/{{ sf_namespace }}-sf_operator_cr.yaml

    - name: Run the standalone command
      ansible.builtin.shell: >
        go run ./main.go dev create standalone-sf --namespace {{ sf_namespace }}
        --cr ~/sf-operator-last-applied-crs/{{ sf_namespace }}-sf_operator_cr.yaml
      args:
        chdir: ~/sf-operator
      environment:
        KUBECONFIG: "{{ kube_config }}"
