---
- name: Create a namespace
  ansible.builtin.shell: |
    oc create namespace {{ executor_plane.namespace }}
    oc adm policy add-scc-to-user privileged system:serviceaccount:{{ executor_plane.namespace }}:default
  environment:
    KUBECONFIG: "{{ executor_plane.kubeconfig }}"

- name: Synchronize default secrets from the control plane
  ansible.builtin.shell: |
    KUBECONFIG={{ control_plane.kubeconfig }} oc get secrets {{ item }} -o json | \
    jq --arg name {{ item }} '. + {metadata: {name: $name}}' | \
    KUBECONFIG={{ executor_plane.kubeconfig }} oc apply -n {{ executor_plane.namespace }} -f -
  loop:
    - ca-cert
    - zookeeper-client-tls
    - zuul-ssh-key
    - zuul-keystore-password

- name: Synchronize extra secrets from the SF control plane
  ansible.builtin.shell: |
    KUBECONFIG={{ control_plane.kubeconfig }} oc get secrets {{ item }} -o json | \
    jq --arg name {{ item }} '. + {metadata: {name: $name}}' | \
    KUBECONFIG={{ executor_plane.kubeconfig }} oc apply -n {{ executor_plane.namespace }} -f -
  loop: "{{ control_plane.extra_secrets }}"

- name: Synchronize config-maps from the SF control plane
  ansible.builtin.shell: |
    KUBECONFIG={{ control_plane.kubeconfig }} oc get cm {{ item }} -o json | \
    jq --arg name {{ item }} '. + {metadata: {name: $name}}' | \
    KUBECONFIG={{ executor_plane.kubeconfig }} oc apply -n {{ executor_plane.namespace }} -f -
  loop: "{{ control_plane.extra_configmaps }}"

- name: Expose the finger port
  kubernetes.core.k8s:
    kubeconfig: "{{ executor_plane.kubeconfig }}"
    state: present
    namespace: "{{ executor_plane.namespace }}"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: zuul-executor-lb
      spec:
        ports:
          - name: zuul-executor-7900
            port: 7900
            protocol: TCP
            targetPort: 7900
        selector:
          app: sf
          run: zuul-executor
        type: LoadBalancer

- name: scale down the executor to trigger a graceful stop
  tags:
    - upgrade-only
  ansible.builtin.shell: |
    KUBECONFIG={{ control_plane.kubeconfig }} oc scale --replicas=0 statefulset/zuul-executor

- name: wait for the executor to stop
  tags:
    - upgrade-only
  ansible.builtin.shell: |
    KUBECONFIG={{ control_plane.kubeconfig }} oc get pods
  register: _ze_up
  until:
    - "'zuul-executor' not in _ze_up.stdout"
  retries: "{{ executor_graceful_stop_retries }}"
  delay: "{{ executor_graceful_stop_delay }}"
  ignore_errors: true

- name: SIGKILL the executor if needed
  tags:
    - upgrade-only
  when: "'zuul-executor' in _ze_up.stdout"
  ansible.builtin.shell: |
    KUBECONFIG={{ control_plane.kubeconfig }} kubectl delete pod zuul-executor-0 --grace-period=0 --force=true

- name: Run the standalone deployment of Sofware Factory from the sf-operator
  ansible.builtin.include_role:
    name: sf/openshift/install-software-factory
  vars:
    kube_config: "{{ executor_plane.kubeconfig }}"
    sf_namespace: "{{ executor_plane.namespace }}"
    # ensure those paramaters are empty as we already copy the data from the control plane
    corporate_ca_certs: "{{ undef() }}"
    zuul_connections_secrets: []
    nodepool_providers_secrets: "{{ undef() }}"

- name: scale up the executor statefulset
  tags:
    - upgrade-only
  ansible.builtin.shell: |
    KUBECONFIG={{ control_plane.kubeconfig }} oc scale --replicas=1 statefulset/zuul-executor
