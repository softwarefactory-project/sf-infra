- name: Verify if image exists
  openstack.cloud.image_info:
    cloud: "{{ cloud.name }}"
    auth:
      project_name: "{{ cloud.tenant | default(omit) }}"
    image: "{{ image.name }}"
  register: openstack_image

- when: openstack_image.image is none
  block:
    - name: Ensure image cache directory exists
      ansible.builtin.file:
        path: "{{ tenant_config.image_cache_dir }}"
        state: directory

    - name: Download image
      ansible.builtin.get_url:
        url: "{{ image.url }}"
        dest: "{{ tenant_config.image_cache_dir }}"
        checksum: "sha256:{{ image.checksum }}"
      register: image_download

    - name: check image type
      ansible.builtin.command: file "{{ image_download.dest }}"
      changed_when: false
      register: _image_type

    - name: Convert qcow2 image if needed
      block:
        - name: Get basename
          ansible.builtin.set_fact:
            _image_basename: "{{ image_download.dest | splitext | first }}"

        - name: Convert qcow2 to raw
          ansible.builtin.command: "qemu-img convert -f qcow2 -O raw {{ _image_basename }}.qcow2 {{ _image_basename }}.raw"

        - name: Ensure raw image will be updated
          ansible.builtin.set_fact:
            image_path: "{{ _image_basename }}.raw"
      when: _image_type.stdout.find('QEMU QCOW Image')

    - name: Upload image
      openstack.cloud.image:
        cloud: "{{ cloud.name }}"
        auth:
          project_name: "{{ cloud.tenant | default(omit) }}"
        name: "{{ image.name }}"
        state: present
        container_format: "{{ image.container_format }}"
        disk_format: "{{ image.disk_format }}"
        filename: "{{ image_path | default(image_download.dest) }}"
        # NOTE(jpena): we do not have permissions yet in the cloud to set images to public
        is_public: no
        # TODO: Passing the checksum discards the image name from the query
        # https://github.com/ansible/ansible/blob/fca8a5ef76cc9e40c866981ef2987bbc5726738c/lib/ansible/modules/cloud/openstack/os_image.py#L144-L147
        # checksum: "{{ image.checksum }}"
