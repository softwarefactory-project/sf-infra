---
#   Copyright Red Hat, Inc. All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may
#   not use this file except in compliance with the License. You may obtain
#   a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#   License for the specific language governing permissions and limitations
#   under the License.

- name: Setup certbot
  become: true
  when: certbot_install | default(true)
  block:
    - name: Install epel-release
      ansible.builtin.include_role:
        name: system/epel-release
      when: ansible_distribution != "Fedora"

    - name: Install certbot
      ansible.builtin.package:
        name:
          - certbot
        state: present
        enablerepo: "{{ (ansible_distribution == 'Centos' or ansible_distribution == 'RedHat') | ternary('epel', 'updates,fedora') }}"

    - name: Install python certboot library
      ansible.builtin.package:
        name: "{{ ( ansible_distribution_major_version == '7') | ternary('python2-certbot-apache', 'python3-certbot-apache' ) }}"
        state: present
        enablerepo: "{{ (ansible_distribution == 'Centos') | ternary('epel', 'updates,fedora') }}"
      when:
        - http_service_name != 'nginx'
        - http_service_name != 'standalone'

    - name: Install Centos scl when scl version set
      ansible.builtin.package:
        name: centos-release-scl
        state: present
      when: http_service_name == 'httpd24-httpd'

    # We can use http_service_name variable, to start the service, because
    # both have same name.
    - name: "Install {{ http_service_name }}"
      ansible.builtin.package:
        name: "{{ http_service_name }}"
      when: http_service_name != 'standalone'

    - name: Start "{{ http_service_name }}"
      ansible.builtin.systemd:
        name: "{{ http_service_name }}"
        state: started
      when: http_service_name != 'standalone'

    # cronie, which provides crontab, might not be installed by default
    - name: Install cronie
      ansible.builtin.package:
        name: cronie

- name: Generate lets encrypt SSLs
  ansible.builtin.include_tasks: ssl_create_cert.yml
  with_dict: "{{ ssl_cert_options }}"
  loop_control:
    loop_var: cert_item
  args:
    apply:
      become: true
