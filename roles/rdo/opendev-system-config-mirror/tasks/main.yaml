- name: Get OS specific package variables
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files: "{{ distro_lookup_path }}"
      paths:
        - vars

- name: Check AFS mounted
  ansible.builtin.stat:
    path: "/afs/openstack.org/mirror"
  register: afs_mirror
- name: Sanity check AFS
  ansible.builtin.assert:
    that:
      - afs_mirror.stat.exists

- name: Setup Apache with scl
  block:
    - name: Install base packages if defined
      ansible.builtin.package:
        name: centos-release-scl
        state: present

    - name: Remove old Apache packages
      ansible.builtin.package:
        name: "{{ old_apache_packages }}"
        state: absent

    - name: Remove Apache config directory
      ansible.builtin.file:
        path: /etc/httpd
        state: absent
  when: use_scl | default(False)

- name: Install apache packages
  ansible.builtin.package:
    name: '{{ apache_packages }}'
    state: present

- name: Apache webroot
  ansible.builtin.file:
    path: '{{ www_base }}'
    state: directory
    owner: root
    group: root

- name: Apache www root
  ansible.builtin.file:
    path: '{{ www_root }}'
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: AFS content symlinks
  ansible.builtin.file:
    src: '{{ mirror_root }}/{{ item }}'
    dest: '{{ www_root }}/{{ item }}'
    state: link
    owner: root
    group: root
    follow: false
  with_items:
    - apt-puppetlabs
    - centos
    - centos-stream
    - ceph-deb-nautilus
    - ceph-deb-octopus
    - deb-docker
    - debian
    - debian-security
    - debian-openstack
    - epel
    - fedora
    - logs
    - opensuse
    - ubuntu
    - ubuntu-ports
    - ubuntu-cloud-archive
    - wheel
    - yum-puppetlabs

- name: Install robots.txt
  ansible.builtin.copy:
    src: robots.txt
    dest: '{{ www_root }}'
    owner: root
    group: root
    mode: 0444

- name: Install wheel_header.html
  ansible.builtin.copy:
    src: wheel_header.html
    dest: '{{ www_base }}'
    owner: root
    group: root
    mode: 0444

- name: Apache proxy cache
  ansible.builtin.file:
    path: '{{ cache_root }}'
    owner: '{{ www_user }}'
    group: '{{ www_user }}'
    mode: 0755
    state: directory

- name: Set mirror servername and alias
  ansible.builtin.set_fact:
    apache_server_name: '{{ inventory_hostname }}'
    # Strip the numeric host value (like mirror01.region.provider.o.o
    # becomes mirror.region...)  for the serveralias
    apache_server_alias: '{{ inventory_hostname | regex_replace("^mirror\d\d\.", "mirror.") }}'

- name: Copy apache tuning
  ansible.builtin.copy:
    src: apache-connection-tuning
    dest: "{{ apache_conf_dir }}/connection-tuning.conf"
    owner: root
    group: root
    mode: 0644
  notify: restart apache

- name: Include OS specific tasks
  include_tasks: "{{ item }}"
  vars:
    params:
      files: "{{ distro_lookup_path }}"
  loop: "{{ query('first_found', params, errors='ignore') }}"

# Clean apache cache once an hour, keep size down to 70GiB.
- name: Proxy cleanup cron job
  ansible.builtin.cron:
    name: Apache cache cleanup
    state: present
    job: if [ -f /opt/rh/httpd24/enable ]; then source /opt/rh/httpd24/enable; fi; /usr/bin/flock -n /var/run/htcacheclean.lock htcacheclean -n -p {{ cache_root }} -t -l 70200M > /dev/null
    minute: '0'
    hour: '2'
