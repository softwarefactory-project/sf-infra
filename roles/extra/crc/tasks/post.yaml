---
- name: Get console credentials
  shell: |
    /usr/local/bin/crc console --credentials
  register: _crc_creds
  no_log: "{{ hide_sensitive_logs }}"

- name: Write credentials output to the file
  copy:
    content: "{{ _crc_creds.stdout }}"
    dest: crc-creds
  no_log: "{{ hide_sensitive_logs }}"

- name: Get crc client path
  shell: |
    eval $(crc oc-env); whereis oc | awk '{print $2}'
  register: _oc_bin

- name: Copy oc binary
  become: true
  copy:
    src: "{{ _oc_bin.stdout }}"
    dest: "/usr/local/bin/oc"
    mode: "0755"
    remote_src: true

- name: Login to the Openshift
  shell: |
    /usr/local/bin/oc login -u kubeadmin -p "{{ openshift_admin_password }}" https://api.crc.testing:6443
  until: "'Unable to connect to the server' not in _login_user.stderr"
  retries: 20
  delay: 10
  register: _login_user
  no_log: "{{ hide_sensitive_logs }}"

- name: Add router-ca to system certs to allow accessing the crc image registry
  shell: |
    /usr/local/bin/oc extract secret/router-ca --keys=tls.crt -n openshift-ingress-operator --confirm
  no_log: "{{ hide_sensitive_logs }}"

- name: Copy tls crt to ca-trust
  become: true
  copy:
    src: "~{{ ansible_user | default('zuul') }}/tls.crt"
    dest: /etc/pki/ca-trust/source/anchors/crc-router-ca.pem
    remote_src: true

- name: Update local certs
  become: true
  shell: update-ca-trust

- name: Add alias for oc
  shell: |
    echo "eval \$(crc oc-env)" >> ~/.bashrc

- name: Setup kubernetes repository
  become: true
  copy:
    content: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
      enabled=1
      gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      exclude=kubelet kubeadm kubectl
    dest: /etc/yum.repos.d/kubernetes.repo

- name: Install required packages
  become: true
  yum:
    name:
      - kubectl
    state: present
    update_cache: true
    disable_excludes: kubernetes
