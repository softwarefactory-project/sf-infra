---
- name: Create host directories
  become: yes
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode|default(omit) }}"
  loop:
    - path: /etc/prometheus
    - path: /var/lib/prometheus
      mode: "0777"

- name: Create configuration file
  become: yes
  copy:
    content: "{{ item.content }}"
    dest: "/etc/prometheus/{{ item.dest }}.yml"
  loop:
    - dest: prometheus
      content: |
        ---
        global:
          scrape_interval: 1m
          scrape_timeout: 10s
          evaluation_interval: 1m
        alerting:
          alertmanagers:
            - static_configs:
                - targets:
                    - localhost:9093
        rule_files:
          - rules.yml
        scrape_configs:
          - job_name: node
            static_configs:
              - targets:
                  - bridge.softwarefactory-project.io:9100
                  - mirror.regionone.vexxhost.rdoproject.org:9100
                  - logreduce-mqtt01.softwarefactory-project.io:9100
                  - backup.rdoproject.org:9100
          - job_name: journal
            static_configs:
              - targets:
                  - logreduce-mqtt01.softwarefactory-project.io:9101

    # Some doc:
    #   Check alert status: curl -g 'http://localhost:9090/api/v1/alerts' | python -mjson.tool
    #   Get metrics names: curl -g 'http://localhost:9090/api/v1/label/__name__/values' | tr ',' '\n'
    #   Test expr: curl -g 'http://localhost:9090/api/v1/query' --data-urlencode 'query=predict_linear(node_filesystem_avail_bytes{job="node",mountpoint="/",instance="logreduce-mqtt01.softwarefactory-project.io:9100"}[1d], 365 * 24 * 3600)'
    - dest: rules
      content: |
        groups:
          - name: node.rules
            rules:
              - alert: InstanceDown
                expr: up{job="node"} == 0
                for: 10m
              - alert: WillRunOutOfDiskInThreeDays
                # Over 1 day, if the slope becomes negative in 3 days, then emit an alarm
                expr: predict_linear(node_filesystem_avail_bytes{job="node"}[1d], 3 * 24 * 3600) < 0
                for: 1h
              - alert: WillRunOutOfMemoryInThreeDays
                expr: predict_linear(node_memory_MemAvailable_bytes{job="node"}[1d], 3 * 24 * 3600) < 0
                for: 1h

  register: _prom_config

- include_role:
    name: container-service
  vars:
    pod_name: prometheus
    pod_param: >
      --network host
      -v /etc/prometheus/:/etc/prometheus/:Z
      -v /var/lib/prometheus:/prometheus:Z
      quay.io/prometheus/prometheus
      --config.file=/etc/prometheus/prometheus.yml
      --web.enable-lifecycle
      --web.enable-admin-api
    pod_config: "{{ _prom_config }}"
