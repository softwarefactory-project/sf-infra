---
- name: Get 'subscription-manager release' output
  become: true
  ansible.builtin.command: subscription-manager release
  register: _subscription_manager_release
  # 70 is for 'System certificates corrupted. Please reregister' error
  failed_when: _subscription_manager_release.rc not in [0, 1, 70]

- name: Get minor release for EUS activation when rhel_release is set
  when: rhel_release
  block:
    - name: Ensure rhel_release is a string
      ansible.builtin.set_fact:
        rhel_release: "{{ rhel_release | string }}"

    - name: Get minor release for EUS activation when rhel_release is set
      ansible.builtin.set_fact:
        rhel_minor_release: "{{ rhel_release.split('.')[1] }}"

- name: Get minor release for EUS activation when rhel_release is not set
  when: not rhel_release
  ansible.builtin.set_fact:
    rhel_minor_release: "{{ ansible_distribution_version.split('.')[1] }}"

- name: Registration
  when: _subscription_manager_release.stderr != '' or (rhel_release and rhel_release != _subscription_manager_release.stdout.split(' ')[1])
  become: true
  block:
    - name: Register system
      community.general.redhat_subscription:
        state: present
        activationkey: "{{ rhel_activationkey }}"
        org_id: "{{ rhel_org_id }}"
        release: "{{ rhel_release | default(ansible_distribution_version) }}"
        force_register: yes

    - name: Manage Extended Update Support repos
      # EUS for rhel-9.6 will be available after 9.7 release
      when: (rhel_minor_release | int) % 2 == 0 and rhel_release != 9.6
      community.general.rhsm_repository:
        name: "{{ item }}"
        state: "enabled"
      loop:
        - rhel-9-for-x86_64-baseos-eus-rpms
        - rhel-9-for-x86_64-appstream-eus-rpms

    - name: Upgrade all packages
      when: _subscription_manager_release.stderr != '' or (rhel_release and rhel_release != _subscription_manager_release.stdout.split(' ')[1])
      ansible.builtin.dnf:
        name: "*"
        state: latest

    - name: Reboot after initial upgrade
      when: "'This system is not yet registered' in _subscription_manager_release.stderr"
      ansible.builtin.reboot:
