# File was generated via ansible role:
# https://gitlab.com/osas/ansible-role-ah-httpd

<VirtualHost *:80>
        ServerName {{ ara_api_fqdn }}

        {% if webroot_dir %}
        Alias /.well-known/acme-challenge {{ webroot_dir }}/.well-known/acme-challenge
        <Directory {{ webroot_dir}}/.well-known/acme-challenge >
            Order deny,allow
            Require all granted
        </Directory>
        {% endif %}

        RewriteEngine On
        # for lets encrypt automation
        RewriteCond %{REQUEST_URI} !^/.well-known/acme-challenge/
        RewriteCond %{HTTPS} off
        RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI}


        ErrorLog logs/{{ ara_api_fqdn }}_error.log
        CustomLog logs/{{ ara_api_fqdn }}_access.log combined

</VirtualHost>

<VirtualHost *:443>
        ServerName {{ ara_api_fqdn }}

        ProxyPreserveHost On
        ProxyPass /.well-known/acme-challenge/ !
        ProxyPass /server-status !
        ProxyPass / http://127.0.0.1:8000/
        ProxyPassReverse / http://127.0.0.1:8000/

        ErrorLog logs/{{ ara_api_fqdn }}_error.log
        CustomLog logs/{{ ara_api_fqdn }}_access.log "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

        SSLEngine on
        SSLCertificateKeyFile /etc/letsencrypt/live/{{ ara_api_fqdn }}/privkey.pem
        SSLCertificateChainFile /etc/letsencrypt/live/{{ ara_api_fqdn }}/fullchain.pem
        SSLCertificateFile /etc/letsencrypt/live/{{ ara_api_fqdn }}/cert.pem
        Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

        <Location /static>
            Require all granted
            AllowOverride All
            Header set Cache-Control "max-age=604800, public"
        </Location>

</VirtualHost>
